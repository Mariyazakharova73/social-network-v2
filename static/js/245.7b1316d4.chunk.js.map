{"version":3,"file":"static/js/245.7b1316d4.chunk.js","mappings":"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","sources":["HOC/withAuthRedirect.tsx","../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","components/DialogsItem/DialogsItem.tsx","components/DialogsMessage/DialogsMessage.tsx","components/Dialogs/DialogsForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","redux/actions/dialogsActions.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { LOGIN_PATH } from \"../utils/constants\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppStateType } from \"../redux/redux-store\";\r\n\r\ninterface IMapProps {\r\n  isAuth: boolean;\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType) =>\r\n  ({\r\n    isAuth: state.authReducer.isAuth,\r\n  } as IMapProps);\r\n\r\ninterface IMapDispatchProps {}\r\n\r\nexport function withAuthRedirect<WCP>(Component: React.ComponentType<any>) {\r\n  const RedirectComponent: FC<IMapProps & IMapDispatchProps> = (props) => {\r\n    let { isAuth, ...restProps } = props;\r\n    if (!isAuth) return <Navigate to={LOGIN_PATH} />;\r\n\r\n    return <Component {...(restProps as WCP)} />;\r\n  };\r\n\r\n  let ConnectedAuthRedirectComponent = connect<IMapProps, IMapDispatchProps, WCP, AppStateType>(\r\n    mapStateToPropsForRedirect\r\n  )(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}\r\n\r\nexport default withAuthRedirect;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","import React, { FC } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport { IDialog } from \"../../types/types\";\r\nimport styles from \"../../App.module.css\";\r\n\r\ninterface IDialogsItemProps {\r\n  item: IDialog;\r\n  index: number;\r\n  selectedIndex: number;\r\n  handleListItemClick: (index: number) => void;\r\n}\r\n\r\nconst DialogsItem: FC<IDialogsItemProps> = ({\r\n  item,\r\n  index,\r\n  selectedIndex,\r\n  handleListItemClick,\r\n}) => {\r\n  return (\r\n    <ListItem selected={selectedIndex === index} onClick={() => handleListItemClick(index)}>\r\n      <NavLink to={`${item.id}`} className={styles.link}>\r\n        <ListItemButton>\r\n          <ListItemAvatar>\r\n            <Avatar alt={item.name} src=\"/static/images/avatar/1.jpg\" />\r\n          </ListItemAvatar>\r\n          <ListItemText primary={item.name} />\r\n        </ListItemButton>\r\n      </NavLink>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default DialogsItem;\r\n","import React, { FC } from \"react\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\n\r\ninterface IDialogsMessageProps {\r\n  message: string;\r\n  index: number;\r\n}\r\n\r\nconst DialogsMessage: FC<IDialogsMessageProps> = ({ message, index }) => {\r\n  return (\r\n    <ListItem\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        bgcolor: \"background.paper\",\r\n        borderRadius: 5,\r\n        m: 3,\r\n        p: 2,\r\n      }}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar alt={index % 2 === 0 ? \"\" : \"M\"} src=\"/static/images/avatar/1.jpg\" />\r\n      </ListItemAvatar>\r\n      <ListItemText>{message}</ListItemText>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default DialogsMessage;\r\n","import React, { FC } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { Formik, Form as FormikForm } from \"formik\";\r\nimport { newMessageBodySchema } from \"../../utils/validators\";\r\nimport { createField } from \"../../utils/helpers\";\r\n\r\ninterface IDialogsFormProps {\r\n  addNewMessage: (newMessageBody: string) => void;\r\n}\r\n\r\ninterface IDialogsFormValues {\r\n  newMessageBody: string;\r\n}\r\n\r\nexport type DialogsFormTypeKeys = Extract<keyof IDialogsFormValues, string>;\r\n\r\nconst DialogsForm: FC<IDialogsFormProps> = ({ addNewMessage }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        newMessageBody: \"\",\r\n      }}\r\n      onSubmit={(values, { resetForm }) => {\r\n        addNewMessage(values.newMessageBody);\r\n        resetForm();\r\n      }}\r\n      validationSchema={newMessageBodySchema}\r\n      validateOnBlur\r\n    >\r\n      {({ values, handleChange, errors, touched, dirty }) => (\r\n        <FormikForm>\r\n          {createField<DialogsFormTypeKeys>(\r\n            \"newMessageBody\",\r\n            null,\r\n            touched,\r\n            errors,\r\n            \"text\",\r\n            \"medium\",\r\n            true,\r\n            \"Enter your message\",\r\n            \"filled\",\r\n            true\r\n          )}\r\n          {/* <Field\r\n            as={TextField}\r\n            name=\"newMessageBody\"\r\n            label=\"Enter your message\"\r\n            fullWidth\r\n            variant=\"filled\"\r\n            multiline\r\n            error={touched.newMessageBody && !!errors.newMessageBody}\r\n            helperText={touched.newMessageBody && errors.newMessageBody}\r\n            type=\"text\"\r\n          /> */}\r\n          <Box mt={2} sx={{ textAlign: \"end\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              endIcon={<SendIcon />}\r\n              disabled={!dirty || !!errors.newMessageBody}\r\n            >\r\n              Send\r\n            </Button>\r\n          </Box>\r\n        </FormikForm>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default DialogsForm;\r\n","import React, { FC } from \"react\";\r\nimport DialogsItem from \"../DialogsItem/DialogsItem\";\r\nimport DialogsMessage from \"../DialogsMessage/DialogsMessage\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport List from \"@mui/material/List\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogsForm from \"./DialogsForm\";\r\nimport { InitialStateType } from \"../../redux/reducers/dialogsReducer\";\r\n\r\ninterface IDialogsProps {\r\n  sendMessage: (message: string) => void;\r\n  dialogsPage: InitialStateType;\r\n}\r\n\r\nconst Dialogs: FC<IDialogsProps> = ({ sendMessage, dialogsPage }) => {\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n  let messagesData = dialogsPage.messages;\r\n  let dialogsData = dialogsPage.dialogs;\r\n\r\n  const handleListItemClick = (index: number) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  const addNewMessage = (data: string) => {\r\n    sendMessage(data);\r\n  };\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={2} divider={<Divider orientation=\"vertical\" flexItem />}>\r\n      <List>\r\n        {dialogsData.map((item, index) => {\r\n          return (\r\n            <DialogsItem\r\n              key={item.id}\r\n              handleListItemClick={handleListItemClick}\r\n              item={item}\r\n              index={index}\r\n              selectedIndex={selectedIndex}\r\n            />\r\n          );\r\n        })}\r\n      </List>\r\n      <Box>\r\n        <List>\r\n          {messagesData.map((item, index) => {\r\n            return <DialogsMessage key={index} message={item.message} index={index} />;\r\n          })}\r\n        </List>\r\n        <DialogsForm addNewMessage={addNewMessage} />\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\r\nimport { sendMessageActionCreator } from \"../../redux/actions/dialogsActions\";\r\nimport { compose } from \"redux\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport { FC } from 'react';\r\nimport { ISendMessageAction } from \"../../redux/types/dialogsTypes\";\r\n\r\n// отправляет данные\r\nconst mapStateToProps = (state: AppStateType) => {\r\n  return { dialogsPage: state.dialogsReducer };\r\n};\r\n\r\n// отправляет колбеки\r\nconst mapDispatchToProps = (dispatch: (arg0: ISendMessageAction) => void) => {\r\n  return {\r\n    sendMessage: (newMessageBody: string) => {\r\n      dispatch(sendMessageActionCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n\r\n// const DialogsContainer = () => {\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {(store) => {\r\n//         let state = store.getState();\r\n//         const onSendMessageClick = () => {\r\n//           store.dispatch(sendMessageActionCreator());\r\n//         };\r\n\r\n//         const onNewMessageChange = (body) => {\r\n//           store.dispatch(updateNewMessageBodyActionCreator(body));\r\n//         };\r\n//         return (\r\n//           <Dialogs\r\n//             updateNewMessageBody={onNewMessageChange}\r\n//             sendMessage={onSendMessageClick}\r\n//             dialogsPage={state.dialogsReducer}\r\n//           />\r\n//         );\r\n//       }}\r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\n","import { ISendMessageAction } from \"../types/dialogsTypes\";\r\nimport { SEND_MESSAGE } from './../types/dialogsTypes';\r\n\r\nexport const sendMessageActionCreator = (newMessageBody: string): ISendMessageAction => {\r\n  return {\r\n    type: SEND_MESSAGE,\r\n    newMessageBody,\r\n  };\r\n};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["mapStateToPropsForRedirect","state","isAuth","authReducer","withAuthRedirect","Component","connect","props","restProps","_objectWithoutProperties","_excluded","_jsx","_objectSpread","Navigate","to","LOGIN_PATH","getListItemAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","ListItemAvatarRoot","styled","name","overridesResolver","styles","ownerState","root","alignItems","alignItemsFlexStart","_ref","_extends","minWidth","flexShrink","marginTop","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","context","ListContext","classes","slots","composeClasses","useUtilityClasses","clsx","item","index","selectedIndex","handleListItemClick","ListItem","selected","onClick","children","NavLink","concat","id","link","_jsxs","ListItemButton","ListItemAvatar","Avatar","alt","src","ListItemText","primary","message","sx","width","maxWidth","bgcolor","borderRadius","m","p","addNewMessage","Formik","initialValues","newMessageBody","onSubmit","values","_ref2","resetForm","validationSchema","newMessageBodySchema","validateOnBlur","_ref3","handleChange","errors","touched","dirty","FormikForm","createField","Box","mt","textAlign","Button","variant","type","endIcon","SendIcon","disabled","sendMessage","dialogsPage","_React$useState","_React$useState2","_slicedToArray","setSelectedIndex","messagesData","messages","dialogsData","dialogs","Stack","direction","spacing","divider","Divider","orientation","flexItem","List","map","DialogsItem","DialogsMessage","DialogsForm","data","compose","dialogsReducer","dispatch","SEND_MESSAGE","sendMessageActionCreator","Dialogs","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}