{"version":3,"file":"static/js/624.633ea143.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","components/DialogsItem/DialogsItem.jsx","components/DialogsMessage/DialogsMessage.jsx","components/Dialogs/DialogsForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport styles from \"../../App.module.css\";\r\n\r\nconst DialogsItem = ({ item, index, selectedIndex, handleListItemClick }) => {\r\n  return (\r\n    <ListItem selected={selectedIndex === index} onClick={() => handleListItemClick(index)}>\r\n      <NavLink to={`${item.id}`} className={styles.link}>\r\n        <ListItemButton>\r\n          <ListItemAvatar>\r\n            <Avatar alt={item.name} src=\"/static/images/avatar/1.jpg\" />\r\n          </ListItemAvatar>\r\n          <ListItemText primary={item.name} />\r\n        </ListItemButton>\r\n      </NavLink>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default DialogsItem;\r\n","import React from \"react\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\n\r\nconst DialogsMessage = ({ message, index }) => {\r\n  return (\r\n    <ListItem\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        bgcolor: \"background.paper\",\r\n        borderRadius: 5,\r\n        m: 3,\r\n        p: 2,\r\n      }}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar alt={index % 2 === 0 ? \"\" : \"M\"} src=\"/static/images/avatar/1.jpg\" />\r\n      </ListItemAvatar>\r\n      <ListItemText>{message}</ListItemText>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default DialogsMessage;\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { Formik, Form as FormikForm, Field } from \"formik\";\r\nimport { newMessageBodySchema } from \"./../../utils/validators\";\r\n\r\nconst DialogsForm = ({ addNewMessage }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        newMessageBody: \"\",\r\n      }}\r\n      onSubmit={(values, { resetForm }) => {\r\n        console.log(values);\r\n        addNewMessage(values.newMessageBody);\r\n        resetForm();\r\n      }}\r\n      validationSchema={newMessageBodySchema}\r\n      validateOnBlur\r\n    >\r\n      {({ values, handleChange, errors, touched, dirty }) => (\r\n        <FormikForm>\r\n          <Field\r\n            as={TextField}\r\n            name=\"newMessageBody\"\r\n            label=\"Enter your message\"\r\n            fullWidth\r\n            variant=\"filled\"\r\n            multiline\r\n            error={touched.newMessageBody && !!errors.newMessageBody}\r\n            helperText={touched.newMessageBody && errors.newMessageBody}\r\n            type=\"text\"\r\n          />\r\n          <Box mt={2} sx={{ textAlign: \"end\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              endIcon={<SendIcon />}\r\n              disabled={!dirty || !!errors.newMessageBody}\r\n            >\r\n              Send\r\n            </Button>\r\n          </Box>\r\n        </FormikForm>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default DialogsForm;\r\n","import React from \"react\";\r\nimport DialogsItem from \"../DialogsItem/DialogsItem\";\r\nimport DialogsMessage from \"../DialogsMessage/DialogsMessage\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport List from \"@mui/material/List\";\r\nimport Box from \"@mui/material/Box\";\r\nimport DialogsForm from \"./DialogsForm\";\r\n\r\nconst Dialogs = ({ sendMessage, dialogsPage, isAuth }) => {\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n  let messagesData = dialogsPage.messages;\r\n  let dialogsData = dialogsPage.dialogs;\r\n  let newMessageBody = dialogsPage.newMessageBody;\r\n\r\n  const handleListItemClick = (index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  const addNewMessage = (data) => {\r\n    sendMessage(data);\r\n  };\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={2} divider={<Divider orientation=\"vertical\" flexItem />}>\r\n      <List>\r\n        {dialogsData.map((item, index) => {\r\n          return (\r\n            <DialogsItem\r\n              key={item.id}\r\n              handleListItemClick={handleListItemClick}\r\n              item={item}\r\n              index={index}\r\n              selectedIndex={selectedIndex}\r\n            />\r\n          );\r\n        })}\r\n      </List>\r\n      <Box>\r\n        <List>\r\n          {messagesData.map((item, index) => {\r\n            return <DialogsMessage key={index} message={item.message} index={index} />;\r\n          })}\r\n        </List>\r\n        <DialogsForm addNewMessage={addNewMessage} />\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"./../../HOC/withAuthRedirectComponent\";\r\nimport { sendMessageActionCreator } from \"../../redux/dialogsReducer\";\r\nimport { compose } from \"redux\";\r\n\r\n// отправляет данные\r\nconst mapStateToProps = (state) => {\r\n  return { dialogsPage: state.dialogsReducer };\r\n};\r\n\r\n// отправляет колбеки\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageActionCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n\r\n// const DialogsContainer = () => {\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {(store) => {\r\n//         let state = store.getState();\r\n//         const onSendMessageClick = () => {\r\n//           store.dispatch(sendMessageActionCreator());\r\n//         };\r\n\r\n//         const onNewMessageChange = (body) => {\r\n//           store.dispatch(updateNewMessageBodyActionCreator(body));\r\n//         };\r\n//         return (\r\n//           <Dialogs\r\n//             updateNewMessageBody={onNewMessageChange}\r\n//             sendMessage={onSendMessageClick}\r\n//             dialogsPage={state.dialogsReducer}\r\n//           />\r\n//         );\r\n//       }}\r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\n"],"names":["getListItemAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListItemAvatarRoot","styled","name","overridesResolver","props","styles","ownerState","root","alignItems","alignItemsFlexStart","_ref","_extends","minWidth","flexShrink","marginTop","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","context","ListContext","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","item","index","selectedIndex","handleListItemClick","ListItem","selected","onClick","children","NavLink","to","concat","id","link","_jsxs","ListItemButton","ListItemAvatar","Avatar","alt","src","ListItemText","primary","message","sx","width","maxWidth","bgcolor","borderRadius","m","p","addNewMessage","Formik","initialValues","newMessageBody","onSubmit","values","_ref2","resetForm","console","log","validationSchema","newMessageBodySchema","validateOnBlur","_ref3","handleChange","errors","touched","dirty","FormikForm","Field","as","TextField","label","fullWidth","variant","multiline","error","helperText","type","Box","mt","textAlign","Button","endIcon","SendIcon","disabled","sendMessage","dialogsPage","_React$useState","isAuth","_React$useState2","_slicedToArray","setSelectedIndex","messagesData","messages","dialogsData","dialogs","Stack","direction","spacing","divider","Divider","orientation","flexItem","List","map","DialogsItem","DialogsMessage","DialogsForm","data","compose","connect","state","dialogsReducer","dispatch","sendMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}